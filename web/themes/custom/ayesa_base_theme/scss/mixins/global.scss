@mixin wrapper-horizontal() {
	padding-left: 20px;
	padding-right: 20px;
}

@mixin wrapper-vertical() {
	padding-top: 20px;
	padding-bottom: 20px;
}

@mixin box-shadow($left, $top, $radius, $color) {
	box-shadow: $left $top $radius $color;
	-webkit-box-shadow: $left $top $radius $color;
	-moz-box-shadow: $left $top $radius $color;
}

@mixin transition($property, $duration, $easing: linear) {
	transition: $property $duration $easing;
	-webkit-transition: $property $duration $easing;
	-moz-transition: $property $duration $easing;
}

@mixin border-radius($radius) {
	border-radius: $radius;
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
}

@mixin border-radii($topleft, $topright, $bottomright, $bottomleft) {
	border-top-left-radius: $topleft;
	border-top-right-radius: $topright;
	border-bottom-right-radius: $bottomright;
	border-bottom-left-radius: $bottomleft;
	-webkit-border-top-left-radius: $topleft;
	-webkit-border-top-right-radius: $topright;
	-webkit-border-bottom-right-radius: $bottomright;
	-webkit-border-bottom-left-radius: $bottomleft;
	-moz-border-radius-topleft: $topleft;
	-moz-border-radius-topright: $topright;
	-moz-border-radius-bottomright: $bottomright;
	-moz-border-radius-bottomleft: $bottomleft;
}

@mixin gradient($color1, $color2) {
	background-color: $color1;
	filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr=#{$color1}, endColorstr=#{$color2});
	background-image: -moz-linear-gradient(center top, $color1, $color2);
	background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from($color1), to($color2));
}

@mixin background-opacity($color, $opacity: 0.3) {
    background: $color; /* The Fallback */
    background: rgba($color, $opacity);
}

@mixin color-link($color) {
	a,
	a.visited,
	a:visited,
	a:hover {
		color: $color;
	}
}

// Border radius
@mixin radius($radius: 5px) {
  border-radius: $radius;
}

// Text shadow
@mixin ts($tsval: 0 1px 0 #fff) {
  text-shadow: $tsval;
}

// Box shadow
@mixin bs($bsval: 0 0 0.83em #333, $due: 0 0 0 transparent) {
  -moz-box-shadow: $bsval, $due;
  -webkit-box-shadow: $bsval, $due;
  -o-box-shadow: $bsval, $due;
  box-shadow: $bsval, $due;
}

// Opacity
@mixin opacity($opacity) {
  opacity: $opacity;
  -moz-opacity: $opacity;
}

// Transitions
@mixin transition($transition: all linear .2s) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -o-transition: $transition;
  -ms-transition: $transition;
  transition: $transition;
}

// Transforms
 @mixin transform($transform: translate3d(0, 0, 0)) {
  -webkit-transform: $transform;
  -moz-transform: $transform;
  -o-transform: $transform;
  transform: $transform;
  -ms-transform: $transform;
 }

//Key frames
@mixin keyframes($animation) {
  @-webkit-keyframes #{$animation} {@content};
    @-moz-keyframes #{$animation} {@content};
      @-ms-keyframes #{$animation} {@content};
          @keyframes #{$animation} {@content};
}

// Animation
@mixin animation($name) {
  -webkit-animation: $name;
     -moz-animation: $name;
      -ms-animation: $name;
          animation: $name;
}

// Delay
@mixin delay($delay: 0s) {
  -webkit-animation-delay: $delay;
  -moz-animation-delay: $delay;
  -o-animation-delay: $delay;
  -ms-animation-delay: $delay;
  delay: $delay;
}

@mixin clearfix() {
	&::after {
		content: '';
		display: block;
		float: none;
		clear: both;
	}
}

@mixin wrapper() {
	padding: 0 6rem;
	max-width: 1200px;
	margin: 0 auto;
}

@mixin inline-menu() {
	ul.menu {
		padding: 0;
		margin: 0;
		list-style: none;
		li {
			display: inline-block;
		}
	}
}
